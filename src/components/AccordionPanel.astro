---
interface Props {
  title: string;
  fileName: string;
  language: string;
}

const { fileName, title, language } = Astro.props;

const contentFile = await import(
    `../service-accordion/${language}/${fileName}.md`
  ),
  ContentComponent = contentFile.default,
  wave = `/services/${fileName}-wave.svg`,
  image = `/services/${fileName}-image.svg`;
---

<div id={fileName} class="panel-container">
  <div class="panel-head">
    <h2 class="relative">
      {title}
    </h2>
  </div>
  <div class="panel-content relative">
    <div>
      <div class="panel-inner">
        <img class="absolute wave panel-wave" src={wave} alt="" />
        <img class="absolute panel-image" src={image} alt="" />
        <ContentComponent />
      </div>
    </div>
  </div>
</div>

<script define:vars={{ fileName }}>
  function openPanel(container) {
    container.classList.toggle("active");
    const innerContent = container.querySelector(".panel-inner"),
      wave = container.querySelector(".panel-wave"),
      image = container.querySelector(".panel-image");
    let imageTop = innerContent.offsetHeight - image.offsetHeight - 60;
    if (imageTop < 0) {
      imageTop = 0;
    }
    wave.style.height = `${innerContent.offsetHeight}px`;
    image.style.top = `${imageTop}px`;
  }

  document.addEventListener("DOMContentLoaded", () => {
    const nameAsHash = `#${fileName}`;

    if (window.location.hash === nameAsHash) {
      const panelContainer = document.querySelector(nameAsHash);
      openPanel(panelContainer);
    }
    const panelHeads = document.querySelectorAll(".panel-head");

    panelHeads.forEach((panelHead) => {
      console.log(panelHead);
      panelHead.addEventListener("click", () => {
        const container = panelHead.closest(".panel-container");
        openPanel(container);
      });
    });
  });
</script>

<style is:global>
  .panel-container {
    background: var(--secondary);
    border-left: solid 1.4rem var(--primary);
    margin: var(--space-md);
  }

  .panel-head {
    padding: var(--space-sm);
    cursor: pointer;
  }

  .panel-head h2 {
    padding-left: var(--space-md);
  }

  .panel-container h2::before {
    position: absolute;
    content: "+";
    font-size: 5.89rem;
    font-family: sans-serif;
    color: var(--accent);
    line-height: 5.33rem;
    top: 0;
    left: 0;
    transition: 0.9s transform;
  }

  .panel-container.active h2::before {
    transform: rotate(315deg);
  }

  .panel-content {
    display: grid;
    grid-template-rows: 0fr;
    transition: grid-template-rows 0.6s;
    overflow: hidden;
    padding: 0 var(--space-sm);
  }

  .panel-inner {
    padding-bottom: var(--space-sm);
  }

  .panel-content div {
    overflow: hidden;
    transition: 0s;
  }

  .panel-container.active .panel-content {
    grid-template-rows: 1fr;
  }

  .panel-wave {
    height: 65rem;
    min-height: 100%;

    width: 100%;
    top: 0;
    right: 0;
  }
  .panel-image {
    right: 0;
    max-width: 35%;
  }

  .panel-content ol {
    list-style-type: none;
    counter-reset: counter;
    padding-left: var(--space-lg);
    width: 50%;
    padding-bottom: 0;
    margin: 0;
  }

  .panel-content li {
    counter-increment: counter;
    position: relative;
  }

  .panel-content li::before {
    position: absolute;
    content: counter(counter);
    color: var(--accent);
    font-size: var(--text-lg);
    left: calc(-1 * var(--space-sm));
    font-family: "Fugaz One";
    display: inline-block;
    transform: translateY(-21%);
  }

  @media only screen and (max-width: 768px) {
    h2 {
      font-size: var(--text-md);
    }

    h3 {
      font-size: var(--text-sm);
    }

    .panel-container {
      margin: var(--space-md) var(--space-xs);
    }

    .panel-content ol {
      padding-left: 0;
      width: 80%;
    }

    .panel-content li::before {
      display: none;
    }

    .panel-image {
      max-width: 22%;
    }
  }
</style>
