---
interface Props {
  language: string;
  page: string;
}

const { language, page } = Astro.props;
let home, projects, services, contactUs;

const homeLink = `/${language}`,
  projectsLink = `/${language}/projects`,
  servicesLink = `/${language}/services`,
  contactLink = `/${language}/contact`;

if (language === "NO") {
  home = "Hjem";
  projects = "Prosjekter";
  services = "Tjenester";
  contactUs = "Kontakt Oss";
} else {
  home = "Home";
  projects = "Projects";
  services = "Services";
  contactUs = "Contact Us";
}
---

<nav class="align-center">
  <img src="/logo.svg" alt="" />
  <div id="hamburger-icon">
    <div id="line-1" class="animation animation-off"></div>
    <div id="line-2" class="animation animation-off"></div>
    <div id="line-3" class="animation animation-off"></div>
    <div id="line-4" class="animation animation-off"></div>
  </div>
  <div id="group" class="align-center animation animation-off">
    <ul id="links" class="align-center">
      <li><a href={homeLink}>{home}</a></li>
      <li><a href={projectsLink}>{projects}</a></li>
      <li><a href={servicesLink}>{services}</a></li>
    </ul>
    <a href={contactLink} id="contact" class="btn btn-primary">{contactUs}</a>
    <div id="dropdown">
      <span data-lang={language}
        >{language}<img src="/chevron-down.svg" alt="" /></span
      >
      <div id="dropdown-contents" class="flex-column">
        <a href={`/EN/${page}`} data-lang="EN">EN</a>
        <a href={`/NO/${page}`} data-lang="NO">NO</a>
        <a href={`/BG/${page}`} data-lang="BG">BG</a>
      </div>
    </div>
  </div>
</nav>

<script>
  function dropdown() {
    const dropdownContents = document.querySelector("#dropdown"),
      currentLang = dropdownContents.querySelector("span"),
      dropdownItems = dropdownContents.querySelectorAll("a");

    dropdownItems.forEach((item) => {
      if (item.dataset.lang === currentLang.dataset.lang) {
        item.remove();
      }
    });
  }

  function hamburger() {
    const hamburgerIcon = document.querySelector("#hamburger-icon"),
      group = document.querySelector("#group"),
      animationItems = document.querySelectorAll(".animation");
    hamburgerIcon.addEventListener("click", () => {
      hamburgerIcon.classList.toggle("active");
      group.classList.toggle("active");

      animationItems.forEach((element) =>
        element.classList.remove("animation-off")
      );
      window.addEventListener("resize", () => {
        if (window.innerWidth > 767) {
          animationItems.forEach((element) => {
            element.classList.add("animation-off");
            hamburgerIcon.classList.remove("active");
            group.classList.remove("active");
          });
        }
      });
    });
  }

  document.addEventListener("DOMContentLoaded", () => {
    dropdown();
    hamburger();
  });
</script>
<style>
  nav {
    font-family: "champagne_bold", sans-serif;
    font-weight: 500;
    box-sizing: border-box;
    width: 100%;
    height: var(--nav-height);
    justify-content: space-between;
    padding: 0 var(--space-sm);
    font-size: 2.4rem;
    font-weight: 500;
  }

  a {
    text-decoration: unset;
  }

  ul {
    list-style: none;
  }

  nav *:not(.btn-primary) {
    color: var(--light);
  }

  #group {
    gap: var(--space-lg);
  }

  #links {
    gap: var(--space-lg);
  }

  #dropdown {
    padding: 2rem;
    cursor: pointer;
  }

  #dropdown-contents {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s;
    position: absolute;
    margin: var(--space-xxs) 0;
    transform: translateX(calc(-1 * var(--space-xxs)));
    z-index: 1;
  }

  #dropdown-contents a {
    padding: 0.5rem var(--space-xxs);
  }

  #dropdown-contents a:hover {
    background: #fff3;
  }

  #dropdown:hover #dropdown-contents {
    max-height: 200px;
  }

  #dropdown img {
    padding-left: 0.5rem;
    transform: translateY(-50%);
  }

  @media only screen and (max-width: 1200px) {
    #group,
    #links,
    .btn-primary {
      gap: var(--space-md);
    }
  }
  @media only screen and (max-width: 768px) {
    :root {
      --hamburger-width: 6rem;
      --hamburger-height: 4rem;
      --half-hamburger-height: calc(var(--hamburger-height) / 2);
      --third-hamburger-height: calc(var(--hamburger-height) / 3);
    }

    #hamburger-icon {
      display: unset;
      position: absolute;
      width: var(--hamburger-width);
      height: var(--hamburger-height);
      cursor: pointer;
      top: 2.5rem;
      right: 2.5rem;
      z-index: 10000;
    }

    #hamburger-icon div {
      background: #fff;
      width: 100%;
      height: 0.3rem;
      position: absolute;
      border-radius: 0.3rem;
      box-shadow: 0px 2px 4px 1px rgba(0, 0, 0, 0.2);
    }

    #hamburger-icon #line-1 {
      animation: line-1-rev 0.6s;
      top: 0;
    }

    #hamburger-icon #line-2 {
      animation: line-2-rev 0.6s;
      top: var(--third-hamburger-height);
    }
    #hamburger-icon #line-3 {
      animation: line-2-rev 0.6s;
      top: calc(var(--third-hamburger-height) * 2);
    }

    #hamburger-icon #line-4 {
      animation: line-3-rev 0.6s;
      top: var(--hamburger-height);
    }

    #hamburger-icon.active #line-1 {
      transform: translate(0, var(--half-hamburger-height)) rotate(45deg);
      animation: line-1 0.6s;
    }

    #hamburger-icon.active #line-2 {
      transform: scale(0);
      animation: line-2 0.6s;
    }

    #hamburger-icon.active #line-3 {
      transform: scale(0);
      animation: line-2 0.6s;
    }

    #hamburger-icon.active #line-4 {
      transform: translate(0, calc(var(--half-hamburger-height) * -1))
        rotate(135deg);
      animation: line-3 0.6s;
    }

    @keyframes line-1 {
      from {
        transform: translate(0, 0);
      }

      50% {
        transform: translate(0, var(--half-hamburger-height));
      }

      to {
        transform: translate(0, var(--half-hamburger-height)) rotate(45deg);
      }
    }

    @keyframes line-2 {
      from {
        transform: scale(1);
      }

      50% {
        transform: scale(0);
      }

      to {
        transform: scale(0);
      }
    }

    @keyframes line-3 {
      from {
        transform: translate(0, 0);
      }

      50% {
        transform: translate(0, calc(var(--half-hamburger-height) * -1));
      }

      to {
        transform: translate(0, calc(var(--half-hamburger-height) * -1))
          rotate(135deg);
      }
    }

    @keyframes line-1-rev {
      from {
        transform: translate(0, var(--half-hamburger-height)) rotate(45deg);
      }

      50% {
        transform: translate(0, var(--half-hamburger-height));
      }

      to {
        transform: translate(0, 0px);
      }
    }

    @keyframes line-2-rev {
      from {
        transform: scale(0);
      }

      50% {
        transform: scale(0);
      }

      to {
        transform: scale(1);
      }
    }

    @keyframes line-3-rev {
      from {
        transform: translate(0, calc(var(--half-hamburger-height) * -1))
          rotate(135deg);
      }

      50% {
        transform: translate(0, calc(var(--half-hamburger-height) * -1));
      }

      to {
        transform: translate(0, 0px);
      }
    }

    .animation-off {
      -webkit-animation: none !important;
      animation: none !important;
      transition: 0s !important;
    }

    #group,
    #links {
      flex-direction: column;
      align-items: flex-start;
      font-size: var(--text-lg);
    }

    #links {
      padding: 0;
      margin: 0;
    }

    #group {
      transform: translateX(100%);
      transition: transform 0.8s;
      background: var(--black);
      z-index: 1000;
      position: fixed;
      width: 100vw;
      height: 100lvh;
      top: 0;
      left: 0;
      padding-left: var(--space-lg);
      padding-top: var(--space-xl);
      font-size: var(--text-lg);
    }

    .btn-primary {
      font-size: var(--text-lg);
      transform: translateX(-6rem);
      transition: 0s;
      padding: 3rem 6rem;
      border-radius: 50rem;
    }

    #group.active {
      transform: none;
    }

    #dropdown {
      font-size: var(--text-md);
      font-family: "champagne_regular";
    }

    #dropdown span::after,
    #dropdown a:not(:last-child):after {
      content: "|";
      padding-left: 0.4rem;
    }

    #dropdown-contents {
      flex-direction: row;
      position: relative;
      display: inline;
    }

    #dropdown-contents a {
      padding: 0;
      max-height: unset;
    }

    #dropdown-contents a:hover {
      background: unset;
    }

    #dropdown:hover #dropdown-contents {
      max-height: 200px;
    }

    #dropdown img {
      display: none;
    }
  }
</style>
